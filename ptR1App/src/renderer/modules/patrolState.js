// patrolState.js
// ‡πÄ‡∏Å‡πá‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ç‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏≤‡∏î‡∏ï‡∏£‡∏∞‡πÄ‡∏ß‡∏ô ‡πÄ‡∏ä‡πà‡∏ô path ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î ‡πÅ‡∏•‡∏∞ goal point ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô

// üìç path ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ó‡∏µ‡πà‡∏´‡∏∏‡πà‡∏ô‡∏¢‡∏ô‡∏ï‡πå‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏î‡∏¥‡∏ô (‡∏à‡∏≤‡∏Å Electron ‡∏´‡∏£‡∏∑‡∏≠ Planner)
export let patrolPath = [];
export let goalPoint = null; // goal point ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
export let isPatrolling = false; // ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ß‡πà‡∏≤‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏•‡∏≤‡∏î‡∏ï‡∏£‡∏∞‡πÄ‡∏ß‡∏ô
export let currentGoalIndex = -1; // ‡∏î‡∏±‡∏ä‡∏ô‡∏µ‡∏Ç‡∏≠‡∏á‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
export let isLooping = false; // ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏ß‡∏ô patrol


// ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï path ‡∏•‡∏≤‡∏î‡∏ï‡∏£‡∏∞‡πÄ‡∏ß‡∏ô
export function setPatrolPath(path) {
  patrolPath = [...path];
}

// ‡∏ï‡∏±‡πâ‡∏á goal ‡πÉ‡∏´‡∏°‡πà
export function setGoalPoint(pt) {
  goalPoint = pt;
}

// ‡∏•‡πâ‡∏≤‡∏á goal point
export function clearGoalPoint() {
  goalPoint = null;
}

export function setLooping(value) {
  isLooping = value;
  console.log(`Patrol looping mode set to: ${isLooping}`);
}


// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£ Patrol
export function startPatrolState() {
  if (patrolPath.length === 0) {
    console.warn("No patrol path set. Cannot start patrol.");
    return;
  }
  isPatrolling = true;
  currentGoalIndex = 0;
  setGoalPoint(patrolPath[currentGoalIndex]);
  console.log("Patrol started. Current goal index:", currentGoalIndex);
}

// ‚è∏Ô∏è ‡∏´‡∏¢‡∏∏‡∏î‡∏Å‡∏≤‡∏£‡∏•‡∏≤‡∏î‡∏ï‡∏£‡∏∞‡πÄ‡∏ß‡∏ô‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß
export function pausePatrolState() {
  isPatrolling = false;
  console.log("Patrol paused.");
}

// ‚ñ∂Ô∏è ‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤‡∏•‡∏≤‡∏î‡∏ï‡∏£‡∏∞‡πÄ‡∏ß‡∏ô‡∏ï‡πà‡∏≠
export function resumePatrolState() {
  if (currentGoalIndex === -1 || patrolPath.length === 0) {
    console.warn("Cannot resume patrol. No current goal or patrol path set.");
    return;
  }
  isPatrolling = true;
  console.log("Patrol resumed.");
  // ‡∏™‡πà‡∏á goal ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏≥‡∏á‡∏≤‡∏ô
  setGoalPoint(patrolPath[currentGoalIndex]);
}

// ‡∏´‡∏¢‡∏∏‡∏î‡∏Å‡∏≤‡∏£‡∏•‡∏≤‡∏î‡∏ï‡∏£‡∏∞‡πÄ‡∏ß‡∏ô‡πÅ‡∏•‡∏∞‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
export function stopPatrolState() {
  isPatrolling = false;
  currentGoalIndex = -1;
  clearGoalPoint();
  console.log("Patrol stopped and reset.");
}

// ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡∏ñ‡∏±‡∏î‡πÑ‡∏õ‡πÉ‡∏ô path
export function moveToNextGoal() {
  // --- ‡∏Å‡∏£‡∏ì‡∏µ‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏ñ‡∏∂‡∏á‡∏à‡∏∏‡∏î‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢ ---
  if (currentGoalIndex < patrolPath.length - 1) {
    currentGoalIndex++;
    setGoalPoint(patrolPath[currentGoalIndex]);
    console.log(`Moving to next goal (index ${currentGoalIndex}).`);
    return goalPoint;
  } 
  
  // --- ‡∏Å‡∏£‡∏ì‡∏µ‡∏ó‡∏µ‡πà‡∏ñ‡∏∂‡∏á‡∏à‡∏∏‡∏î‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢‡πÅ‡∏•‡πâ‡∏ß ---
  if (isLooping) {
    currentGoalIndex = 0;
    setGoalPoint(patrolPath[currentGoalIndex]);
    console.log("Looping back to the first goal (index 0).");
    return goalPoint;
  } else {
    // ‡∏ñ‡πâ‡∏≤‡∏õ‡∏¥‡∏î‡πÇ‡∏´‡∏°‡∏î Loop: ‡∏´‡∏¢‡∏∏‡∏î‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô
    stopPatrolState(); 
    return null;
  }
}